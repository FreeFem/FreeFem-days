
int nn=8;
include "cube.idp"
    int[int]  Nxyz=[8,8,8];
    real [int,int]  Bxyz=[[0,1],[0,1],[0,1]];
    int [int,int]  Lxyz=[[1,1],[1,1],[1,2]];
mesh3 Th=Cube(Nxyz,Bxyz,Lxyz);
fespace VVh(Th,[P2,P2,P2,P1]);

macro Grad(u) [dx(u),dy(u),dz(u)]// EOM
macro div(u1,u2,u3) (dx(u1)+dy(u2)+dz(u3)) //EOM
  
  varf vStokes([u1,u2,u3,p],[v1,v2,v3,q]) = 
  int3d(Th,qforder=3)( Grad(u1)'*Grad(v1) +  Grad(u2)'*Grad(v2) +  Grad(u3)'*Grad(v3)
             - div(u1,u2,u3)*q - div(v1,v2,v3)*p + 1e-8*q*p ) 
  + on(2,u1=4*(1-x)*(x)*(y)*(1-y),u2=0,u3=0)
  + on(1,u1=0,u2=0,u3=0)
 ;//4*(1-x)*(x)*(y)*(1-y)

cout << "b  mat " << endl;

matrix A=vStokes(VVh,VVh);
cout << "e  mat " << endl;
set(A,solver=UMFPACK);
cout << "e fac  mat " << endl;
real[int] b= vStokes(0,VVh);

VVh [u1,u2,u3,p];
VVh [v1,v2,v3,q];

p[]= A^-1 * b;

plot(p,fill=1,wait=1,nbiso=20);
// build cut...
mesh T2d=square(8,8);
fespace V2d(T2d,P2);
V2d ux,uz,p2;
for(int i=1;i<5;i++)
{
 real yy=i/5.;
 ux= u1(x,yy,y);
 uz= u3(x,yy,y);
 p2= p(x,yy,y);
 plot([ux,uz],p2,cmm=" cut y = "+yy,wait= 1);
}
