/* P1 representation */
// Parameters
int nbseg=100;
real R=1, xc=0, yc=0;
// border
border circle(t=0,2*pi){label=1;x=xc+R*cos(t);
                                y=yc+R*sin(t);}
// FE mesh
mesh Th = buildmesh(circle(nbseg));plot(Th);
// FE space
fespace Vh(Th, P1);
Vh u=x*x+y*y;  plot(u, dim=3,fill=1,wait=1);
// 2d integral
func fu=x*x+y*y;
cout.precision(12);
real int2dU = int2d(Th)(fu);
cout <<"int2dU="<<int2dU<<endl;
cout <<" exact="<<pi*R^4/2<<endl;
real int1dU = int1d(Th,1)(fu);
cout <<"int1dU="<<int1dU<<endl;
cout <<" exact="<<2*pi*R^3<<endl;
// other definition of functions
func string infoMesh(mesh & Th)
{
  string message="Mesh size:: nv="+ Th.nv+" nt="+Th.nt;
      return message;
}
cout << infoMesh(Th)<<endl;
func  real Meshsize(mesh & Th)
{
  fespace Ph(Th,P0);
  Ph h=hTriangle;
      return h[].max;
}
cout << Meshsize(Th)<<endl;
