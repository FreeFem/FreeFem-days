/*
  Incompressible steady Navier Stokes + boussinesq coupled system
    with Taylor-Hood Finite element
    Non-linearity : Newton method
    continuation on Rayleigh Number
*/
real  raymax = 10000;  
bool adaptation=1;
mesh Th=square(20,20);
fespace XXXMh(Th,[P2,P2,P1,P1]);//vectorial FE space for velocity and pressure
fespace Vh(Th,P2); 
XXXMh [u1,u2,p,T];
XXXMh [uw1,uw2,pw,Tw];
XXXMh [v1,v2,q,TT]; 
Vh U; 
macro grad(u) [dx(u),dy(u)]//
macro Grad(u) [grad(u#1),grad(u#2)]//
macro div(u) (dx(u#1)+dy(u#2)) //
macro ugrad(u,v) ([u#1,u#2]'*grad(v) ) //
macro UgradV(u,v,T) [ugrad(u,v#1),ugrad(u,v#2),ugrad(u,T)]//

real Pr = 56.2; 


int i=0;
real  nu=1./100.;// define a dummy nu for reversing it to rayleigh in iteration
real pran =.71;
real cmT=1;
real kT  =  1. / Pr ; 
real eps = 1e-6;


[u1,u2,p,T]=[0,0,0,1-x]; 
for(real ray=100;ray<=raymax;ray=min(raymax, ray*2.))//continuation on rayleigh number
  { 
    ray = min(ray,raymax);
    cmT = - ray/Pr; 
    kT  =  1. / Pr ; 
    int one =adaptation;
	for (i=0;i<=20;i++)// nonlinear newton iteration
	  {
	    nu =1./ray;
       solve BoussinesqNL([uw1,uw2,pw,Tw],[v1,v2,q,TT])
       = int2d(Th) (
       UgradV(u,uw,Tw)' * [v1,v2,TT]
     + UgradV(uw,u,T)'  * [v1,v2,TT]
     + ( Grad(uw):Grad(v)) * nu   
     + cmT*Tw*v2 
     + grad(Tw)'*grad(TT)*kT  
     - div(uw)*q -div(v)*pw - eps*pw*q  
     )
   - int2d(Th)(
       UgradV(u,u,T)' * [v1,v2,TT]
     + ( Grad(u):Grad(v) ) * nu 
     + cmT*T*v2 
     +  grad(T)'*grad(TT)*kT  
     - div(u)*q -div(v)*p 
     - eps*p*q  
     ) 
   + on(1,2,3,4, uw1=0,uw2=0) + on(2,Tw=0) + on(4,Tw=0) ;
	 u1[] -= uw1[]; 
	 
	cout << " iter = "<< i << " err=  " << uw1[].linfty 
	         <<  " ray = " << ray << endl;
	    if(uw1[].l2<1e-6) {
      	if( one )
        {
         one=0;
         Th=adaptmesh(Th,[u1,u2],T,p,err=0.05,nbvx=100000);
         [u1,u2,p,T]=[u1,u2,p,T];
         [uw1,uw2,pw,Tw]=[0,0,0,0];
         U=U;
        }
        else	       
	       break; 
	    }
	    U = square( u1*u1+u2*u2); 
	    plot(coef=0.2,cmm=" [u1,u2] et T  "+ray+ " u max =" + U[].max ,T,[u1,u2]);  

	  } ;
      
   plot(coef=0.2,[u1,u2],cmm="ray="+ray+" temperature "+ " u max =" + U[].max,T,wait=0,nbiso=20); 
   if( ray==raymax) break;  
  }
