
mesh Th=square(8,8);
fespace Xh(Th,P2);
fespace Mh(Th,P1);
fespace XXMh(Th,[P2,P2,P1]);
XXMh [u1,u2,p];
XXMh [v1,v2,q]; 

macro div(u1,u2) (dx(u1)+dy(u2))//
macro grad(u1,u2) [dx(u1),dy(u2)]//
macro ugrad(u1,u2,v) (u1*dx(v)+u2*dy(v)) //
macro Ugrad(u1,u2,v1,v2) [ugrad(u1,u2,v1),ugrad(u1,u2,v2)]//

solve Stokes ([u1,u2,p],[v1,v2,q],solver=UMFPACK) =
    int2d(Th)( ( dx(u1)*dx(v1) + dy(u1)*dy(v1)
            +  dx(u2)*dx(v2) + dy(u2)*dy(v2) )
            + p*q*(1e-15) 
            - p*div(v1,v2)-q*div(u1,u2)
           )
  + on(1,2,4,u1=0,u2=0)
  + on(3,u1=1.,u2=0) 
;

plot([u1,u2],p,wait=1); // Ok.

Th=adaptmesh(Th,min(0.1,0.01+(x+1-y)/10),IsMetric=1);
plot(Th,wait=1);
Stokes;
plot([u1,u2],wait=1); // Ok
plot(p,wait=1,value=1); // the bug
cout << " flux = " << int1d(Th)(u1*N.x+u2*N.y) << endl;
// where is the bug... (hard).
